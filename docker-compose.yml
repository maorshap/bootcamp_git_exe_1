version: '3'
services:

  elastic_service:
    build:
      context: .
      dockerfile: producer/ElasticDockerfile
    container_name: elastic_search_container
    environment:
      - cluster.name=elastic-cluster
      - node.name=first_node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  jersey_server_1:
    build:
      context: .
      dockerfile: producer/Dockerfile
    depends_on:
      - elastic_service
      - zookeeper
      - kafka
    container_name: jersey_server_1_container

  jersey_server_2:
    build:
      context: .
      dockerfile: producer/Dockerfile
    depends_on:
      - elastic_service
      - zookeeper
      - kafka
    container_name: jersey_server_2_container

  haproxy:
    build:
      context: .
      dockerfile: haproxy/Dockerfile
    container_name: haproxy_container
    ports:
      - "8001:8080"
    depends_on:
      - jersey_server_1
      - jersey_server_2

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    #container_name: zookeeper_container
    #hostname: zookeeper

  kafka:
    image: wurstmeister/kafka:2.11-2.0.0
    ports:
      - "9092:9092"
   # container_name: kafka_container
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  consumer:
    build:
      context: .
      dockerfile: indexer/Dockerfile
    container_name: consumer_container

  db:
    image: 'mysql:5.6.34'
    restart: always
    environment:
      MYSQL_DATABASE: bootcamp_db
      MYSQL_USER: user
      MYSQL_PASSWORD: 1234
      MYSQL_ROOT_PASSWORD: 1234
    ports:
      - "3306:3306"
    volumes:
      - ./infrastructure/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  account_service:
    build:
      context: .
        # context: ./accounts-service
        # dockerfile: Dockerfile
      dockerfile: account-service/Dockerfile
    depends_on:
      - db
    container_name: account-service_container
    ports:
      - "8090:8090"


volumes:
  esdata1:
    driver: local